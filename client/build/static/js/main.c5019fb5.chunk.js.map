{"version":3,"sources":["Context/AuthContext.js","BASE_URL.js","Pages/Auth.js","Components/EventsListItem.js","Components/EventsList.js","Components/Modal.js","Pages/Events.js","Components/BookingsListItem.js","Components/BookingsList.js","Pages/Bookings.js","Components/Navbar.js","App.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","useState","userId","setUserId","token","setToken","tokenExpiration","setTokenExpiration","contextValue","authValues","setAuthValues","clearAuthValues","Provider","value","children","BASE_URL","process","Auth","emailValue","setEmailValue","passwordValue","setPasswordValue","isSignIn","setSignIn","useContext","handleSubmit","e","a","preventDefault","trim","length","requestBody","query","variables","email","password","fetch","method","body","JSON","stringify","headers","response","status","Error","json","responseJson","data","login","console","log","className","onSubmit","htmlFor","id","type","autoComplete","onChange","target","onClick","prev","EventsListItem","eventId","title","price","date","createdById","viewDetailsHandler","toFixed","substr","EventsList","events","showDetailsModal","map","event","_id","createdBy","Modal","canConfirm","onConfirm","onCancel","actionBtnText","Events","setEvents","isModalOpen","setModalOpen","selectedEvent","setSelectedEvent","history","useHistory","titleRef","useRef","priceRef","dateRef","descriptionRef","useEffect","fetchedEvents","fetchEvents","createEventHandler","current","description","Authorization","newEvent","createEvent","bookEventHandler","push","ref","rows","clickedEventId","find","BookingsListItem","bookingId","cancelBooking","BookingsList","bookings","booking","Bookings","setBookings","fetchedBookings","fetchBookings","cancelBookingHandler","canceledBookingId","prevBookings","filter","Navbar","authToken","to","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5019fb5.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction AuthContextProvider(props) {\r\n  const [userId, setUserId] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [tokenExpiration, setTokenExpiration] = useState(null);\r\n\r\n  const clearAuthValues = () => {\r\n    // sign out\r\n    setUserId(null);\r\n    setToken(null);\r\n    setTokenExpiration(null);\r\n  };\r\n\r\n  const setAuthValues = (userId, token, tokenExpiration) => {\r\n    // sign in\r\n    setUserId(userId);\r\n    setToken(token);\r\n    setTokenExpiration(tokenExpiration);\r\n  };\r\n\r\n  const contextValue = {\r\n    authValues: { userId, token, tokenExpiration },\r\n    setAuthValues,\r\n    clearAuthValues,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","const BASE_URL = process.env.REACT_APP_URL;\r\n\r\nexport default BASE_URL;\r\n","import { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport \"./Auth.css\";\r\nimport BASE_URL from \"../BASE_URL\";\r\n\r\nconst Auth = () => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [isSignIn, setSignIn] = useState(false);\r\n\r\n  const authToken = useContext(AuthContext);\r\n  const { setAuthValues } = authToken;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (emailValue.trim().length === 0 || passwordValue.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        mutation CreateUser($email: String!, $password: String!){\r\n          createUser(userInput: {email: $email password: $password}) {\r\n            _id\r\n            email\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: emailValue,\r\n        password: passwordValue,\r\n      },\r\n    };\r\n\r\n    if (isSignIn) {\r\n      requestBody = {\r\n        query: `\r\n          query Login($email: String!, $password: String!){\r\n            login(email: $email password: $password) {\r\n              userId\r\n              token\r\n              tokenExpiration\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: emailValue,\r\n          password: passwordValue,\r\n        },\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(BASE_URL + \"/graphql\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error(\"Failed request\");\r\n      }\r\n      const responseJson = await response.json();\r\n      if (isSignIn) {\r\n        setAuthValues(\r\n          responseJson.data.login.userId,\r\n          responseJson.data.login.token,\r\n          responseJson.data.login.tokenExpiration\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h1 className=\"auth-heading\">{isSignIn ? \"Sign In\" : \"Sign Up\"}</h1>\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <div className=\"auth-control\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            className=\"auth-input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            autoComplete=\"off\"\r\n            value={emailValue}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"auth-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            className=\"auth-input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={passwordValue}\r\n            onChange={(e) => setPasswordValue(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-btns-container\">\r\n          <button className=\"form-btn-submit btn-primary\" type=\"submit\">\r\n            {isSignIn ? \"Sign In\" : \"Sign Up\"}\r\n          </button>\r\n          <button\r\n            className=\"form-btn-switch btn-secondary\"\r\n            type=\"button\"\r\n            onClick={() => setSignIn((prev) => !prev)}\r\n          >\r\n            Switch to {isSignIn ? \"Sign Up\" : \"Sign In\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","const EventsListItem = ({\r\n  eventId,\r\n  title,\r\n  price,\r\n  date,\r\n  createdById,\r\n  userId,\r\n  viewDetailsHandler,\r\n}) => {\r\n  return (\r\n    <li className=\"events-list-item\">\r\n      <div className=\"event-item-data\">\r\n        <h1>{title}</h1>\r\n        <h2>£{price.toFixed(2)}</h2>\r\n        <span>{date.substr(0, date.length - 3)}</span>\r\n        {createdById === userId && (\r\n          <span className=\"event-user-owner\">\r\n            You're the owner of this event\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className=\"event-item-view-details\">\r\n        <button\r\n          className=\"view-event-details btn-primary\"\r\n          onClick={() => viewDetailsHandler(eventId)}\r\n        >\r\n          View details\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default EventsListItem;\r\n","import EventsListitem from \"./EventsListItem\";\r\n\r\nconst EventsList = ({ events, userId, showDetailsModal }) => {\r\n  return (\r\n    <ul className=\"events-list\">\r\n      {events.map((event) => (\r\n        <EventsListitem\r\n          key={event._id}\r\n          eventId={event._id}\r\n          title={event.title}\r\n          price={event.price}\r\n          date={event.date}\r\n          createdById={event.createdBy._id}\r\n          userId={userId}\r\n          viewDetailsHandler={showDetailsModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n","import \"./Modal.css\";\r\n\r\nconst Modal = ({\r\n  children,\r\n  title,\r\n  canConfirm,\r\n  onConfirm,\r\n  onCancel,\r\n  actionBtnText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"modal-title\">\r\n          <h1>{title}</h1>\r\n        </div>\r\n        <section className=\"modal-elements\">{children}</section>\r\n        <section className=\"modal-btns\">\r\n          <button className=\"modal-cancel btn-secondary\" onClick={onCancel}>\r\n            {canConfirm ? \"Cancel\" : \"Close\"}\r\n          </button>\r\n          {canConfirm && (\r\n            <button className=\"modal-confirm btn-primary\" onClick={onConfirm}>\r\n              {actionBtnText}\r\n            </button>\r\n          )}\r\n        </section>\r\n      </div>\r\n      <div className=\"backdrop\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport EventsList from \"../Components/EventsList\";\r\nimport Modal from \"../Components/Modal\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport \"./Events.css\";\r\nimport BASE_URL from \"../BASE_URL\";\r\n\r\nconst Events = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const { authValues } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const titleRef = useRef();\r\n  const priceRef = useRef();\r\n  const dateRef = useRef();\r\n  const descriptionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const requestBody = {\r\n        query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              price\r\n              date\r\n              createdBy {\r\n                _id\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      };\r\n      try {\r\n        const response = await fetch(BASE_URL + \"/graphql\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const responseJson = await response.json();\r\n        const fetchedEvents = responseJson.data.events;\r\n        setEvents(fetchedEvents);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const createEventHandler = async () => {\r\n    const title = titleRef.current.value;\r\n    const price = +priceRef.current.value;\r\n    const date = dateRef.current.value;\r\n    const description = descriptionRef.current.value;\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    )\r\n      return;\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateEvent($title: String!, $price: Float!, $date: String!, $description: String!){\r\n          createEvent(eventInput: {title: $title price: $price date: $date description: $description}) {\r\n            _id\r\n            title\r\n            description\r\n            price\r\n            date\r\n            createdBy {\r\n              _id\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        title,\r\n        price,\r\n        date,\r\n        description,\r\n      },\r\n    };\r\n    try {\r\n      const response = await fetch(BASE_URL + \"/graphql\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + authValues.token,\r\n        },\r\n      });\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error(\"Failed request\");\r\n      }\r\n      const responseJson = await response.json();\r\n      const newEvent = responseJson.data.createEvent;\r\n      setEvents([...events, newEvent]);\r\n      setModalOpen(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalOpen(false);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  const viewDetailsHandler = (clickedEventId) => {\r\n    const selectedEvent = events.find((event) => event._id === clickedEventId);\r\n    setSelectedEvent(selectedEvent);\r\n  };\r\n\r\n  const bookEventHandler = async () => {\r\n    if (!authValues.token) {\r\n      history.push(\"/auth\");\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n        mutation BookEvent($eventId: ID!){\r\n          bookEvent(eventId: $eventId) {\r\n            _id\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        eventId: selectedEvent._id,\r\n      },\r\n    };\r\n    try {\r\n      const response = await fetch(BASE_URL + \"/graphql\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + authValues.token,\r\n        },\r\n      });\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error(\"Failed request\");\r\n      }\r\n      // const responseJson = await response.json();\r\n      setSelectedEvent(null);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <Modal\r\n          title=\"Create an event\"\r\n          onCancel={() => setModalOpen(false)}\r\n          onConfirm={createEventHandler}\r\n          canConfirm={true}\r\n          actionBtnText=\"Confirm\"\r\n        >\r\n          <form className=\"create-event-form\">\r\n            <div className=\"create-event-form-control\">\r\n              <label htmlFor=\"create-event-title\">Title</label>\r\n              <input id=\"create-event-title\" ref={titleRef}></input>\r\n            </div>\r\n            <div className=\"create-event-form-control\">\r\n              <label htmlFor=\"create-event-price\">Price</label>\r\n              <input\r\n                id=\"create-event-price\"\r\n                type=\"number\"\r\n                ref={priceRef}\r\n              ></input>\r\n            </div>\r\n            <div className=\"create-event-form-control\">\r\n              <label htmlFor=\"create-event-date\">Date</label>\r\n              <input id=\"create-event-date\" type=\"date\" ref={dateRef}></input>\r\n            </div>\r\n            <div className=\"create-event-form-control\">\r\n              <label htmlFor=\"create-event-description\">Description</label>\r\n              <textarea\r\n                id=\"create-event-description\"\r\n                rows={4}\r\n                ref={descriptionRef}\r\n              ></textarea>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n      {authValues.token && (\r\n        <div className=\"create-event-container\">\r\n          <p>Share your own events</p>\r\n          <button className=\"btn-primary\" onClick={() => setModalOpen(true)}>\r\n            Create an event\r\n          </button>\r\n        </div>\r\n      )}\r\n      {selectedEvent && (\r\n        <Modal\r\n          title=\"Event details\"\r\n          onCancel={hideModal}\r\n          onConfirm={bookEventHandler}\r\n          canConfirm={\r\n            authValues.userId !== null &&\r\n            selectedEvent.createdBy._id !== authValues.userId\r\n          }\r\n          actionBtnText=\"Book this event\"\r\n        >\r\n          <div className=\"event-details\">\r\n            <h1>{selectedEvent.title}</h1>\r\n            <h2>£{selectedEvent.price.toFixed(2)}</h2>\r\n            <p>{selectedEvent.date.substr(0, selectedEvent.date.length - 3)}</p>\r\n            <p>{selectedEvent.description}</p>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <EventsList\r\n        events={events}\r\n        userId={authValues.userId}\r\n        showDetailsModal={viewDetailsHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","const BookingsListItem = ({ bookingId, title, date, cancelBooking }) => {\r\n  return (\r\n    <li className=\"bookings-list-item\">\r\n      <div className=\"booking-details\">\r\n        <span className=\"booking-name\">{title}</span>\r\n        <span>Event's date: {date.substr(0, date.length - 3)}</span>\r\n      </div>\r\n      <button\r\n        className=\"cancel-booking btn-primary\"\r\n        onClick={() => cancelBooking(bookingId)}\r\n      >\r\n        Cancel booking\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BookingsListItem;\r\n","import BookingsListItem from \"./BookingsListItem\";\r\n\r\nconst BookingsList = ({ bookings, onCancel }) => {\r\n  return (\r\n    <ul className=\"bookings-list\">\r\n      {bookings.map((booking) => (\r\n        <BookingsListItem\r\n          key={booking._id}\r\n          bookingId={booking._id}\r\n          title={booking.event.title}\r\n          date={booking.event.date}\r\n          cancelBooking={onCancel}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default BookingsList;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport BookingsList from \"../Components/BookingsList\";\r\nimport \"./Bookings.css\";\r\nimport BASE_URL from \"../BASE_URL\";\r\n\r\nconst Bookings = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const { authValues } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      const requestBody = {\r\n        query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n              createdAt\r\n              event {\r\n                _id\r\n                title\r\n                date\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      };\r\n      try {\r\n        const response = await fetch(BASE_URL + \"/graphql\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + authValues.token,\r\n          },\r\n        });\r\n        const responseJson = await response.json();\r\n        const fetchedBookings = responseJson.data.bookings;\r\n        setBookings(fetchedBookings);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchBookings();\r\n  }, [authValues.token]);\r\n\r\n  const cancelBookingHandler = async (canceledBookingId) => {\r\n    const requestBody = {\r\n      query: `\r\n        mutation CancelBooking($bookingId: ID!) {\r\n          cancelBooking (bookingId: $bookingId) {\r\n            _id\r\n            title\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        bookingId: canceledBookingId,\r\n      },\r\n    };\r\n    try {\r\n      await fetch(BASE_URL + \"/graphql\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + authValues.token,\r\n        },\r\n      });\r\n      setBookings((prevBookings) =>\r\n        prevBookings.filter((booking) => booking._id !== canceledBookingId)\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bookings\">\r\n      <h1>Your bookings</h1>\r\n      <BookingsList bookings={bookings} onCancel={cancelBookingHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookings;\r\n","import { Link, NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const { authValues, clearAuthValues } = useContext(AuthContext);\r\n  const authToken = authValues.token;\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-brand\">\r\n        <Link to=\"/\" className=\"header-brand-link\">\r\n          BlaBlaEvent\r\n        </Link>\r\n      </div>\r\n      <nav className=\"header-nav\">\r\n        {!authToken && (\r\n          <NavLink to=\"/auth\" className=\"nav-link\">\r\n            Sign In\r\n          </NavLink>\r\n        )}\r\n        <NavLink to=\"/events\" className=\"nav-link\">\r\n          Events\r\n        </NavLink>\r\n        {authToken && (\r\n          <>\r\n            <NavLink to=\"/bookings\" className=\"nav-link\">\r\n              Bookings\r\n            </NavLink>\r\n            <button className=\"sign-out-btn\" onClick={clearAuthValues}>\r\n              Sign Out\r\n            </button>\r\n          </>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useContext } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Auth from \"./Pages/Auth\";\nimport Events from \"./Pages/Events\";\nimport Bookings from \"./Pages/Bookings\";\nimport Navbar from \"./Components/Navbar\";\n\nimport { AuthContext } from \"./Context/AuthContext\";\n\nfunction App() {\n  const { authValues } = useContext(AuthContext);\n  const authToken = authValues.token;\n\n  return (\n    <Router>\n      <Navbar />\n      <main className=\"main-content\">\n        <Switch>\n          <Route exact path=\"/\">\n            {!authToken ? <Redirect to=\"/auth\" /> : <Redirect to=\"/events\" />}\n          </Route>\n          <Route path=\"/auth\">\n            {!authToken ? <Auth /> : <Redirect to=\"/events\" />}\n          </Route>\n          <Route path=\"/events\">\n            <Events />\n          </Route>\n          <Route path=\"/bookings\">\n            {authToken ? <Bookings /> : <Redirect to=\"/auth\" />}\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthContextProvider from \"./Context/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}